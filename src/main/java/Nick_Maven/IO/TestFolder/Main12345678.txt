package Nick_Maven.IO_old;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class Main {

    static List<String> arrayTree = new ArrayList<>();

    public static void outputArrayTree(String path) {
        arrayTree.add(path.substring(path.lastIndexOf("\\") + 1));
        newFilesTree(path);
        for (String s : arrayTree) {
            System.out.println(s);
        }
    }

    private static void readFilesTree(String path) {
        File[] file = new File(path).listFiles();

        for (int i = 0; i < file.length; i++) {
            if (file[i].isFile()) {
                arrayTree.add("|     " + file[i].getName());
            } else if (file[i].isDirectory()) {
                arrayTree.add("|-----" + file[i].getName());
                readFilesTree(path + "//" + file[i].getName());
            }
        }
        arrayTree.add("|     ");
    }

    static List<String> pathForSearch = new ArrayList<>();
    static List<String> formatedList = new ArrayList<>();
    static final String SLASH = "\\";

    private static void newFilesTree(String path) {
        try (Stream<Path> paths = Files.walk(Paths.get(path))) {
            pathForSearch = paths.filter(Files::isRegularFile).map(x -> x.toString()).collect(Collectors.toList());
            for (int i = 0; i < pathForSearch.size(); i++) {
                String endsWith = pathForSearch.get(i).substring(path.length() + 1);
                String startsWith = endsWith.substring(0, endsWith.indexOf(SLASH) + 1);
                while (endsWith.contains(SLASH)) {
//                    System.out.println( startsWith.substring(0,startsWith.indexOf(SLASH)));
//                    for (String s : arrayTree) {
//                        if (s.contains(startsWith.substring(0,startsWith.indexOf(SLASH)))) {
//                            // System.out.println("YEEEEEEEEEEEEE");
//                            endsWith = endsWith.substring(endsWith.indexOf(SLASH) + 1);
//                        }
//                    }
                    arrayTree.add("|-----" + endsWith.substring(0, endsWith.indexOf(SLASH)));
                    endsWith = endsWith.substring(endsWith.indexOf(SLASH) + 1);

                    //System.out.println(temp);
                }
                arrayTree.add("|     " + endsWith);
//                } else arrayTree.add("|     "+temp);
            }
//            arrayTree = arrayTree.stream().distinct().collect(Collectors.toList());
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {
        String path = "D:\\Programming\\maven-demo\\src\\main\\java\\Nick_Maven\\IO\\HIM";
        outputArrayTree(path);

    }
}
